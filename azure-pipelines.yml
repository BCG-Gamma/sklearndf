trigger:
  - *
  # - master
  # - develop
  # - release/*

pr:
  - master
  - develop

# set the build name
name: $[ variables['branchName'] ]

# run tests and full conda/tox build matrix every night at 4am
schedules:
- cron: "0 4 * * *"
  displayName: Nightly full build
  branches:
    include:
    - develop

resources:
  repositories:
    - repository: pytools
      type: github
      endpoint: rkdy
      name: rkdy/pytools
      ref: develop # todo - update to stable release

variables:
  ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')) }}:
    branchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
    branchName: $[ replace(variables['System.PullRequest.SourceBranch'], 'refs/heads/', '') ]
  master_or_release: >
    ${{ or(
    startsWith(variables['branchName'], 'release'),
    eq(variables['branchName'], 'master'),
    eq(variables['Build.Reason'], 'Schedule')
    )
    }}

stages:
  # conda env & tox build test
  # testing matrix of python & sklearn versions
  # - for release branch: 3 build tests
  # - otherwise: 1 build test
  - stage: conda_tox_build
    displayName: 'Conda/tox build & test'

    jobs:
    - job:
      displayName: 'single'

      pool:
          vmImage: 'ubuntu-latest'
      strategy:
        matrix:
          maximum_dependencies_conda:
            FACET_V_PYTHON_BUILD: '=3.8.*'
            BUILD_SYSTEM: 'conda'
            PKG_DEPENDENCIES: 'max'
          maximum_dependencies_tox:
            FACET_V_PYTHON_BUILD: '=3.8.*'
            BUILD_SYSTEM: 'tox'
            PKG_DEPENDENCIES: 'max'

      steps:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              mkdir -p $(System.DefaultWorkingDirectory)/dist
              mkdir -p $(System.DefaultWorkingDirectory)/dist/tox
              touch $(System.DefaultWorkingDirectory)/dist/tox/gamma-sklearndf-bla.tar.gz
          displayName: "build & test conda/pip packages"

        - task: CopyFiles@2
          inputs:
            sourceFolder: $(System.DefaultWorkingDirectory)/dist
            targetFolder: $(Build.ArtifactStagingDirectory)

        - task: PublishBuildArtifacts@1
          inputs:
            pathtoPublish: $(Build.ArtifactStagingDirectory)
            artifactName: $(BUILD_SYSTEM)_$(PKG_DEPENDENCIES)
            publishLocation: Container

  # release on merge from release branch to master:
  # - add release tag
  # - create GitHub release with changelog
  # - upload conda and pip packages as artifacts to GitHub
  - stage:
    displayName: 'Release'
    dependsOn: conda_tox_build

    jobs:
      - job:
        displayName: 'Release'
        condition: eq(replace(variables['Build.SourceBranch'], 'refs/heads/', ''), 'master')

        steps:
          - task: Bash@3
            inputs:
              targetType: inline
              script: |
                cd $(System.DefaultWorkingDirectory)
                export PYTHONPATH=$(System.DefaultWorkingDirectory)/src
                echo "Getting version"
                version=$(python -c "import sklearndf; print(sklearndf.__version__)")
                echo "Current version: $version"
                echo "Detecting pre-release ('rc' in version)""
                prerelease=False
                [[ $version == *rc* ]] && prerelease=True && echo "Prerelease identified"
                echo "##vso[task.setvariable variable=current_version]$version"
                echo "##vso[task.setvariable variable=is_prerelease]$prerelease"
            displayName: "Get package version"

          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: tox_default

          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: conda_default

          - task: GitHubRelease@1
            inputs:
              gitHubConnection: github_release
              repositoryName: $(Build.Repository.Name)
              action: create
              target: $(Build.SourceVersion)
              tagSource: userSpecifiedTag
              tag: $(current_version)
              tagPattern: \d+\.\d+\.\d+(rc\d+)?
              title: sklearndf $(current_version)
              releaseNotesSource: inline
              releaseNotesInline: |
                This is the $(current_version) release of sklearndf.

                You can upgrade your current pip installation via

                    pip install --upgrade sklearndf

                Your conda package can be upgraded by running

                    conda install -c conda-forge sklearndf

              isDraft: false
              isPreRelease: $(is_prerelease)
              assets: |
                $(System.ArtifactsDirectory)/tox_default/tox/gamma-sklearndf-*.tar.gz
                $(System.ArtifactsDirectory)/conda_default/conda/noarch/gamma-sklearndf-*.tar.bz2
