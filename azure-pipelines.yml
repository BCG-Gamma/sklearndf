resources:
  repositories:
    - repository: facet
      type: github
      endpoint: BCG-Gamma
      name: BCG-Gamma/facet
      ref: develop # todo - update to stable release
    - repository: pytools
      type: github
      endpoint: BCG-Gamma
      name: BCG-Gamma/pytools
      ref: develop # todo - update to stable release

stages:
  # Check code quality first to fail fast (isort, flake8, black)
  - stage: code_quality_checks
    displayName: 'Code quality'
    jobs:
      - job:
        displayName: 'isort'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.7.*'
            displayName: 'use Python 3.7'
          - script: |
              python -m pip install isort==5.5.4
              python -m isort --check --diff .
            displayName: 'isort'
      - job:
        displayName: 'black'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.7.*'
            displayName: 'use Python 3.7'
          - script: |
              python -m pip install black==20.8b1
              python -m black --check .
            displayName: 'black'
      - job:
        displayName: 'flake8'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.7.*'
            displayName: 'use Python 3.7'
          - script: |
              python -m pip install flake8 flake8-comprehensions flake8-import-order
              python -m flake8 --config flake8.ini -v .
            displayName: 'Run flake8'

  - stage: 'Quick_env_test'
    displayName: 'Environment build & pytest'

    jobs:
    - job:
      displayName: 'Setup & testing'

      pool:
          vmImage: 'ubuntu-latest'
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.7'
          displayName: 'Use Python 3.7'

        - checkout: self
        - checkout: facet
        - checkout: pytools
        - script: dir $(Build.SourcesDirectory)

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              eval "$(conda shell.bash hook)"
              cd $(System.DefaultWorkingDirectory)/facet/
              export PYTHONPATH=$(System.DefaultWorkingDirectory)/sklearndf/src/
              conda env create -f environment.yml
              conda activate facet-develop
              cd $(System.DefaultWorkingDirectory)/pytools/
              pip install -e .
              cd $(System.DefaultWorkingDirectory)/sklearndf/
              pip install pytest-azurepipelines
              coverage run -m pytest test/test/
              coverage xml
              coverage html
          displayName: 'Pytest'

        - task: PublishTestResults@2
          condition: succeededOrFailed()
          inputs:
            testResultsFiles: '$(System.DefaultWorkingDirectory)/sklearndf/*.xml'
            searchFolder: '$(System.DefaultWorkingDirectory)/sklearndf/'
            testRunTitle: 'Publish test results'

        - task: PublishCodeCoverageResults@1
          inputs:
            codeCoverageTool: Cobertura
            summaryFileLocation: '$(System.DefaultWorkingDirectory)/sklearndf/coverage.xml'
            reportDirectory: '$(System.DefaultWorkingDirectory)/sklearndf/htmlcov'

  # THOROUGH CONDA ENV BUILD TEST
  # TESTING MATRIX OF PYTHON & SKLEARN VERSIONS
  - stage: 'Conda_build_test'
    dependsOn:
      - 'Quick_env_test'
    displayName: 'Test multiple conda environment builds'

    jobs:
    - job:
      displayName: 'Setup & testing'

      pool:
          vmImage: 'ubuntu-latest'
      strategy:
        matrix:
          Minimum dependencies:
            FACET_V_PYTHON_BUILD: '3.6'
            FACET_V_PANDAS: '==0.24'
            FACET_V_SKLEARN: '==0.21.*'
            FACET_V_JOBLIB: '==0.13'
            FACET_V_NUMPY: '==1.16'
          Maximum dependencies:
            FACET_V_PYTHON_BUILD: '3.8'
            FACET_V_SKLEARN: '==0.22'
            FACET_V_PANDAS: '==1.0.0'
            FACET_V_NUMPY: '=>1.16'
          Unconstrained dependencies:
            FACET_V_PYTHON_BUILD: '>=3.6'
            FACET_V_PANDAS: '=>0.24'
            FACET_V_SKLEARN: '=>0.21'
            FACET_V_JOBLIB: '=>0.13'
            FACET_V_NUMPY: '=>1.16'

      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(FACET_V_PYTHON_BUILD)'
          displayName: 'Use Python $(FACET_V_PYTHON_BUILD)'

        - checkout: self
        - checkout: facet
        - checkout: pytools
        - script: dir $(Build.SourcesDirectory)

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              eval "$(conda shell.bash hook)"
              export PYTHONPATH=$(System.DefaultWorkingDirectory)/sklearndf/src/
              export FACET_V_PYTHON_BUILD=$(FACET_V_PYTHON_BUILD)
              export FACET_V_PANDAS=$(FACET_V_PANDAS)
              export FACET_V_SKLEARN=$(FACET_V_SKLEARN)
              export FACET_V_JOBLIB=$(FACET_V_JOBLIB)
              export FACET_V_NUMPY=$(FACET_V_NUMPY)
              conda activate facet-develop
              conda install -y conda-build
              cd $(System.DefaultWorkingDirectory)/pytools/
              make package
              cd $(System.DefaultWorkingDirectory)/sklearndf/
              make package
          displayName: "Build conda package"